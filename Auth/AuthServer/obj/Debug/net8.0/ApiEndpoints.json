[
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_3",
    "RelativePath": "confirmEmail",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "changedEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "EndpointName": "MapIdentityApi-/confirmEmail"
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__6",
    "RelativePath": "forgotPassword",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_1",
    "RelativePath": "login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "Microsoft.AspNetCore.Identity.Data.LoginRequest",
        "IsRequired": false
      },
      {
        "Name": "useCookies",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "useSessionCookies",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.MaintenanceController",
    "Method": "EditOrder",
    "RelativePath": "Maintenance/EditOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "maintenanceOrderSharedModel",
        "Type": "AuthShared.Models.MaintenanceOrderSharedModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.MaintenanceController",
    "Method": "GetMaintenanceCount",
    "RelativePath": "Maintenance/GetMaintenanceCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.MaintenanceController",
    "Method": "GetMaintenanceOrders",
    "RelativePath": "Maintenance/GetOrders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "current",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "max",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "maintenanceOrderStatus",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.MaintenanceOrderSharedModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.MaintenanceController",
    "Method": "Post",
    "RelativePath": "Maintenance/Post",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "maintenanceOrderSharedModel",
        "Type": "AuthShared.Models.MaintenanceOrderSharedModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.MajorController",
    "Method": "GetMajors",
    "RelativePath": "major/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthServer.Entity.MajorEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.MajorController",
    "Method": "GetAllMajors",
    "RelativePath": "major/Trainee/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthServer.Entity.TraineeMajorEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.MajorController",
    "Method": "GetUserMajors",
    "RelativePath": "major/User/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.UserMajorSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_8",
    "RelativePath": "manage/2fa",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tfaRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.TwoFactorRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.TwoFactorResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_9",
    "RelativePath": "manage/info",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__10",
    "RelativePath": "manage/info",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "infoRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.RoleController",
    "Method": "GetRoles",
    "RelativePath": "manage/Role/GetRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.RoleSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "ConfirmEmail",
    "RelativePath": "manage/User/ConfirmEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "ConfirmResetPassword",
    "RelativePath": "manage/User/ConfirmResetPassword",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPassword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "GetAllUsersCount",
    "RelativePath": "manage/User/GetAllUsersCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "GetUserInformation",
    "RelativePath": "manage/User/GetUserInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.UserInformations",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "manage/User/GetUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.UserInformations, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "LockUser",
    "RelativePath": "manage/User/LockUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "AuthShared.Models.UserLockModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "Logout",
    "RelativePath": "manage/User/Logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "manage/User/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerModel",
        "Type": "AuthShared.Models.RegisterModelShared",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "ResetPassword",
    "RelativePath": "manage/User/ResetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgotPasswordModel",
        "Type": "AuthShared.Models.ForgotPasswordModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "SendConfirmEmail",
    "RelativePath": "manage/User/SendConfirmEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "UpdateCurrentUserInfo",
    "RelativePath": "manage/User/UpdateCurrentUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userInformations",
        "Type": "AuthShared.Models.UserInformations",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.UserController",
    "Method": "UpdateUserInfo",
    "RelativePath": "manage/User/UpdateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleDeleteType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "userInformations",
        "Type": "AuthShared.Models.UserInformations",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__2",
    "RelativePath": "refresh",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.RefreshRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__0",
    "RelativePath": "register",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registration",
        "Type": "Microsoft.AspNetCore.Identity.Data.RegisterRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__5",
    "RelativePath": "resendConfirmationEmail",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resendRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[AuthServer.Entity.AppUserEntity, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_7",
    "RelativePath": "resetPassword",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.SectionController",
    "Method": "GetSections",
    "RelativePath": "section/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.AppSectionSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "AddTrainee",
    "RelativePath": "trainee/Add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "traineeShared",
        "Type": "AuthShared.Models.TraineeShared",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "DeleteTrainee",
    "RelativePath": "trainee/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "GetAllTrainees",
    "RelativePath": "trainee/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "current",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "max",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.TraineeShared, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "GetAllTraineesCount",
    "RelativePath": "trainee/GetAllCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "GetTraineeById",
    "RelativePath": "trainee/GetById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.TraineeShared",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "GetTraineeByName",
    "RelativePath": "trainee/GetByName",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "current",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "max",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.TraineeShared, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "GetTraineeByNationalId",
    "RelativePath": "trainee/GetByNationalId/{nationalId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nationalId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.TraineeShared",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.TraineeController",
    "Method": "UpdateTrainee",
    "RelativePath": "Trainee/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "traineeShared",
        "Type": "AuthShared.Models.TraineeShared",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.ServerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "CloseViolation",
    "RelativePath": "violation/CloseViolation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "closeInfrigementModel",
        "Type": "AuthShared.Models.CloseInfrigementModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "ForwardViolation",
    "RelativePath": "violation/ForwardViolation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forwardInfrigementModel",
        "Type": "AuthShared.Models.ForwardInfrigementModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetInfringements",
    "RelativePath": "violation/Get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "current",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "max",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "infringementProcess",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "nationalId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.DTOs.InfrigementDTO, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetAllViolationCount",
    "RelativePath": "violation/GetAllViolationCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetAllViolationRates",
    "RelativePath": "violation/GetAllViolationRates",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.InfrigementRateSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetForwardedViolationsCount",
    "RelativePath": "violation/GetForwardedViolationsCount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetForwardedViolations",
    "RelativePath": "violation/GetForwardViolations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "infrigementForwardOptions",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.ForwardedInfrigementSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetRegulationByInfringementId",
    "RelativePath": "violation/GetRegulationByInfringementId/{InfringementLevelId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "InfringementLevelId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.RegulationsSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetInfringementById",
    "RelativePath": "violation/GetViolationById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.DTOs.InfrigementDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetViolationProcedureByRegulationId",
    "RelativePath": "violation/GetViolationProceduresByRegulationId/{regulaitonId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "regulaitonId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.ViolationProcedureSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "GetViolationRatesByRoleAsync",
    "RelativePath": "violation/GetViolationRateByRole",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthShared.Models.InfrigementRateSharedModel, AuthShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "PostViolation",
    "RelativePath": "violation/Post",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "infringement",
        "Type": "AuthShared.Models.InfringementShared",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AuthShared.Models.InfringementShared",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AuthServer.Controllers.ViolationController",
    "Method": "UpdateViolation",
    "RelativePath": "violation/UpdateViolation",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "infringement",
        "Type": "AuthShared.Models.InfringementShared",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AuthServer.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AuthServer.WeatherForecast, AuthServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]